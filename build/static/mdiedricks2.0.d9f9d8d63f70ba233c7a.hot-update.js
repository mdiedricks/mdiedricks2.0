webpackHotUpdate("mdiedricks2.0",{

/***/ "./packages/mdiedricks-theme/src/themefiles/list.js":
/*!**********************************************************!*\
  !*** ./packages/mdiedricks-theme/src/themefiles/list.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./packages/mdiedricks-theme/node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link */ \"./packages/mdiedricks-theme/src/themefiles/link.js\");\n/* harmony import */ var _util_getProjectDate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/getProjectDate */ \"./packages/mdiedricks-theme/src/themefiles/util/getProjectDate.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var List=(_ref)=>{var{state}=_ref;// get current URL address - store in 'data'\nvar data=state.source.get(state.router.link);var projects=[];var posts=[];//   const postDate = getProjectDate(props.post.date);\n// check the route if projects page or logbook page\nif(data.isReady&&state.router.link===\"/projects/\"){projects=data.items.slice(0,12).map((_ref2)=>{var{type,id}=_ref2;return state.source[type][id];});for(var obj of projects){obj.imageObj=state.source.attachment[obj.featured_media].source_url;}}else if(data.isReady&&state.router.link===\"/logbook/\"){posts=data.items.slice(0,5).map((_ref3)=>{var{type,id}=_ref3;return state.source[type][id];});for(var _obj of posts){_obj.imageObj=state.source.attachment[_obj.featured_media].source_url;_obj.postDate=Object(_util_getProjectDate__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_obj.date);_obj.logID=_obj.acf.log_id;console.log(_obj);}}if(state.router.link===\"/projects/\"){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(ProjectContainer,null,projects.map(proj=>{return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(ProjectCard,{key:proj.id},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(ProjectBG,{className:\"divBG\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(ProjectTitle,{href:proj.link},proj.title.rendered)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(ProjectImage,{src:proj.imageObj}));}));}else if(state.router.link===\"/logbook/\"){return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostContainer,null,posts.map(post=>{return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostCard,{key:post.id},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostMeta,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostDate,null,post.postDate),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostDate,null,\"ID: \",post.logID),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Underline,null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostTitle,{href:post.link},\" \",post.title.rendered),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(PostEx,{dangerouslySetInnerHTML:{__html:post.excerpt.rendered}}));}));}};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(List));// * Colours =======\nvar bgcol=\"#0F0104\";// dark red\nvar bgcol2=\"#1e0308\";// dark red\nvar col1=\"#529840\";// green\nvar col2=\"#DC4F31\";// red\nvar col3=\"#FFE6E0\";// white\n// * ======= PROJECT =======\n// * Typography =====\nvar ProjectTitle=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{target:\"ea5lbf20\",label:\"ProjectTitle\"})(\"font-size:1.2rem;font-weight:bold;color:\",col1,\";text-decoration:none;position:absolute;bottom:20px;visibility:none;transition:visibility 0.4s ease;left:-300px;transition:left 1s ease;cursor:pointer;z-index:2;@media (max-width:600px) and (orientation:portrait){}:hover{color:\",col2,\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var PostDate=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"span\",{target:\"ea5lbf21\",label:\"PostDate\"})(\"color:\",col3,\";\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var ProjectBG=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf22\",label:\"ProjectBG\"})( false?undefined:{name:\"mdtpwt\",styles:\"background-color:white;position:absolute;height:33%;width:100%;bottom:0px;opacity:0;transition:opacity 0.6s ease;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// * Components =====\nvar ProjectCard=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf23\",label:\"ProjectCard\"})(\"position:relative;border:2px solid \",bgcol,\";:hover{border:2px solid \",col2,\";> img{opacity:1;transition:opacity 0.2s ease;}.divBG{opacity:0.8;transition:opacity 0.6s ease;}a{visibility:visible;transition:visibility 0.4s ease;left:20px;transition:left 1s ease;}}overflow:hidden;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var ProjectImage=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"ea5lbf24\",label:\"ProjectImage\"})( false?undefined:{name:\"7bxg01\",styles:\"opacity:0.5;transition:opacity 0.2s ease;width:100%;height:100%;object-fit:cover;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// * Layout =====\nvar ProjectContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf25\",label:\"ProjectContainer\"})( false?undefined:{name:\"1kb3lct\",styles:\"margin-top:2rem;display:grid;grid-template-columns:1fr 1fr 1fr 1fr;column-gap:1rem;row-gap:1rem;@media (max-width:481px){grid-template-columns:1fr;}@media (min-width:481px) and (max-width:768px){grid-template-columns:1fr 1fr;}@media (min-width:768px) and (max-width:1200px){grid-template-columns:1fr 1fr 1fr;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// * ======= POSTS =======\n// * Typography =====\nvar PostTitle=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{target:\"ea5lbf26\",label:\"PostTitle\"})(\"font-size:1.5rem;font-weight:bold;color:\",col1,\";text-decoration:none;:hover{color:\",col2,\";cursor:pointer;}@media (max-width:600px) and (orientation:portrait){visibility:visible;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var PostEx=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf27\",label:\"PostEx\"})(\"padding:1rem 0;color:\",col3,\";\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));// * Layout =====\nvar PostContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf28\",label:\"PostContainer\"})( false?undefined:{name:\"ay2k0y\",styles:\"margin-top:2rem;display:grid;grid-template-rows:1fr;max-width:960px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PostMeta=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf29\",label:\"PostMeta\"})( false?undefined:{name:\"j7qwjs\",styles:\"display:flex;flex-direction:column;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Underline=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf210\",label:\"Underline\"})(\"background-color:\",col2,\";height:1px;width:100px;left:0;margin-top:1rem;margin-bottom:1rem;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));// * Components =====\nvar PostCard=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf211\",label:\"PostCard\"})(\"padding:1rem;color:\",col1,\";margin:1rem auto 0 auto;border:2px solid \",bgcol,\";:hover{border:2px solid \",col2,\";img{opacity:1;transition:opacity 0.3s;}a{visibility:visible;transition:visibility 0.3s;}p{color:\",col1,\";}.holder{border:2px solid \",col2,\";}}@media (min-width:768px) and (max-width:1200px){width:80%;}@media (min-width:1200px){width:70%;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var ImageHolder=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ea5lbf212\",label:\"ImageHolder\"})(\"margin-bottom:1rem;height:35vh;overflow:hidden;border:2px solid \",bgcol,\";\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var PostImage=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"ea5lbf213\",label:\"PostImage\"})( false?undefined:{name:\"1vi8l9u\",styles:\"opacity:0.5;transition:opacity 0.5s;width:100%;vertical align:top;object-fit:cover;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mdiedricks-theme/src/themefiles/list.js\n");

/***/ })

})